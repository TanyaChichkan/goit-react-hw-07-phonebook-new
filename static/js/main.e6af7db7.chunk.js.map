{"version":3,"sources":["components/form/Form.module.css","components/errorMessage/ErrorMessage.module.css","components/notification/Notification.module.css","components/filter/Filter.module.css","components/section/Section.module.css","components/list/List.module.css","components/notification/Notification.js","redux/actions/contactsActions.js","redux/selectors/contactsSelectors.js","components/form/Form.js","redux/operations/contactsOperations.js","components/section/Section.js","components/listItem/ListItem.js","components/list/List.js","components/filter/Filter.js","pic/error.jpg","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","components/tracker/ContactsTracker.js","App.js","redux/reducer/contactsReducer.js","redux/store.js","index.js","components/listItem/ListItem.module.css"],"names":["module","exports","Notification","name","changeAlert","changeName","useEffect","timer","setTimeout","clearTimeout","className","notStyles","alertWrapper","alertText","toUpperCase","slice","addContact","createAction","setLoading","setError","resetError","deleteContact","updateContact","filterContacts","resetSelected","addToSelected","changeContact","getContacts","getFilter","state","filterValue","contactsArr","contacts","getSelectedContact","selectedContact","getVisibleContacts","createSelector","filter","contact","toLowerCase","includes","getError","error","getContactsLoading","isLoading","initialState","number","connect","dispatch","a","axios","post","update","response","id","data","addContactOperations","newContact","put","then","catch","finally","useState","setState","alert","setAlert","doubledName","setDoubledName","buttonActive","handleChange","e","target","value","prev","onSubmit","preventDefault","some","styles","form","label","type","onChange","input","disabled","formButton","Section","children","section","ListItem","onUpdate","onDelete","updatedClass","updated","textUpdatedClass","wrapper","inputHide","itemLabel","data-id","checked","inputItem","onClick","button","delete","deleteContactOperations","handleDelete","dataset","list","map","filterInput","ErrorMessage","onclick","text","message","src","Error","alt","width","height","Spinner","style","textAlign","color","ContactsTracker","useSelector","loading","useDispatch","get","Object","keys","key","App","contactsReducer","createReducer","action","payload","find","item","filterReducer","rootReducer","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,WAAa,2B,mBCAjHD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,WAAa,mC,mBCAzGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,kC,mBCAhFD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,OAAS,yB,mBCArED,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,qJCkBVC,EAhBM,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,KAAKC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,WAStC,OAPAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WAAKJ,GAAY,GAAQC,EAAW,MAAK,KAClE,OAAO,WACLI,aAAaF,MAEf,IAGA,qBAAKG,UAAWC,IAAUC,aAA1B,SACE,oBAAGF,UAAWC,IAAUE,UAAxB,UAAoCV,GAAQA,EAAK,GAAGW,cAAcX,EAAKY,MAAM,GAA7E,mC,OCVOC,EAAaC,YAAa,eAE1BC,EAAaD,YAAa,eAE1BE,EAAWF,YAAa,aAExBG,EAAaH,YAAa,eAE1BI,EAAgBJ,YAAa,kBAE7BK,EAAgBL,YAAa,kBAE7BM,EAAiBN,YAAa,iBAI9BO,GAFcP,YAAa,gBAEXA,YAAa,mBAE7BQ,EAAgBR,YAAa,mBAE7BS,EAAgBT,YAAa,kBAE7BU,EAAcV,YAAa,gB,kDCxBlCW,EAAY,SAACC,GAAD,OAAWA,EAAMC,aAE7BH,EAAc,SAACE,GAAD,OAAWA,EAAME,YAAYC,UAC3CC,EAAqB,SAACJ,GAAD,OAAWA,EAAME,YAAYG,iBAClDC,EAAqBC,YAAe,CAACT,EAAaC,IAAY,SAACI,EAAUK,GAC7E,OAAOL,EAASK,QAAO,SAACC,GAAD,OAAaA,EAAQnC,KAAKoC,cAAcC,SAASH,EAAOE,qBAG3EE,EAAW,SAACZ,GAAD,OAAWA,EAAME,YAAYW,OACxCC,EAAqB,SAACd,GAAD,OAAWA,EAAME,YAAYa,W,iBCGlDC,EAAe,CACnB1C,KAAM,GACN2C,OAAQ,IAkGKC,eAvBS,SAAClB,GACvB,MAAO,CACLG,SAAUL,EAAYE,GACtBK,gBAAiBD,EAAmBJ,OAIb,SAACmB,GAC1B,MAAO,CACLhC,WAAY,SAACsB,GACXU,EC1F8B,SAACV,GAAD,8CAAa,WAAOU,GAAP,eAAAC,EAAA,6DAC/CD,EAAS9B,KADsC,kBAItBgC,IAAMC,KAAN,+FAGhBb,GAHgB,IAInBc,QAAQ,KARiC,OAIvCC,EAJuC,OAW7CL,EAAShC,EAAW,2BAAKsB,GAAN,IAAegB,GAAID,EAASE,KAAKpD,SAXP,gDAa7C6C,EAASA,EAAS7B,EAAS,EAAD,MAbmB,yBAe7C6B,EAAS9B,KAfoC,4EAAb,sDD0FrBsC,CAAqBlB,KAGhCZ,cAAe,SAACY,GChDoB,IAACmB,EDiDnCT,GCjDmCS,EDiDDnB,ECjDgB,SAACU,GACvDA,EAAS9B,KAETgC,IACGQ,IADH,uEACuED,EAAWH,GADlF,oCAEOG,GAFP,IAGIL,QAAQ,KAETO,MAAK,WACJX,EAAStB,EAAc+B,IACvBT,EAASxB,QAEVoC,OAAM,SAAClB,GAAD,OAAWvB,EAASuB,MAC1BmB,SAAQ,kBAAMb,EAAS9B,YDuCxBM,cAAe,WACbwB,EAASxB,SAKAuB,EA/FF,SAAC,GAA8D,IAA5D/B,EAA2D,EAA3DA,WAAYkB,EAA+C,EAA/CA,gBAAiBR,EAA8B,EAA9BA,cAAeM,EAAe,EAAfA,SAAe,EAC/C8B,mBAAS,eAAKjB,IADiC,mBAClEhB,EADkE,KAC3DkC,EAD2D,OAE/CD,oBAAS,GAFsC,mBAElEE,EAFkE,KAE3DC,EAF2D,OAGnCH,mBAAS,IAH0B,mBAGlEI,EAHkE,KAGrDC,EAHqD,KAInEC,GAAevC,EAAM1B,OAAQ0B,EAAMiB,OAEzCxC,qBAAU,WACUyD,EAAlB7B,EAA2B,eAAKA,GAA8B,eAAKW,MAClE,CAACX,IAEJ,IAAMmC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBpE,EADkB,EAClBA,KAAMqE,EADY,EACZA,MACdT,GAAS,SAACU,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBtE,EAAOqE,QAqBzC,OACE,qCACGR,GACC,cAAC,EAAD,CAAc7D,KAAM+D,EAAa9D,YAAa6D,EAAU5D,WAAY8D,IAGtE,uBAAMO,SAxBW,SAACJ,GACpBA,EAAEK,iBAEEzC,EACFR,EAAcG,GAEVG,EAAS4C,MAAK,SAACtC,GAAD,OAAaA,EAAQnC,KAAKoC,gBAAkBV,EAAM1B,KAAKoC,kBACvE0B,GAAS,GACTE,EAAetC,EAAM1B,OAErBa,EAAWa,GAIfkC,EAAS,eAAKlB,KAUkBnC,UAAWmE,IAAOC,KAAhD,UACE,wBAAOpE,UAAWmE,IAAOE,MAAzB,UACG,IADH,OAGE,uBACEC,KAAK,OACLR,MAAO3C,EAAM1B,KACbA,KAAK,OACL8E,SAAUZ,EACV3D,UAAWmE,IAAOK,WAItB,wBAAOxE,UAAWmE,IAAOE,MAAzB,UACG,IADH,SAGE,uBACEC,KAAK,OACLR,MAAO3C,EAAMiB,OACb3C,KAAK,SACL8E,SAAUZ,EACV3D,UAAWmE,IAAOK,WAItB,wBAAQF,KAAK,SAASG,SAAUf,EAAc1D,UAAWmE,IAAOO,WAAhE,SACGlD,EAAkB,eAAiB,yB,QE3E/BmD,EANC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACA,yBAAS5E,UAAW6E,UAApB,SAA8BD,K,wBCyCjBE,EA3CE,SAAC,GAAuE,IAArElC,EAAoE,EAApEA,GAAInD,EAAgE,EAAhEA,KAAM2C,EAA0D,EAA1DA,OAAQM,EAAkD,EAAlDA,OAAQqC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,SAAUxD,EAAsB,EAAtBA,gBAC1DyD,EAAevC,EAASyB,IAAOe,QAAUf,IAAO,eAChDgB,EAAmBzC,EAASyB,IAAO,gBAAkBA,IAAO,oBAElE,OACE,qBAAInE,UAAWiF,EAAf,UACE,uBAAMjF,UAAWmF,EAAjB,UACG1F,EADH,IACU2C,KAGV,sBAAKpC,UAAWmE,IAAOiB,QAAvB,UACE,wBACEpF,UACEwB,GAAmBA,EAAgBoB,KAAOA,EAAKuB,IAAOkB,UAAYlB,IAAOmB,UAF7E,UAKG,IALH,SAOE,uBACEhB,KAAK,WACLiB,UAAS3C,EACT2B,SAAUQ,EACVS,QAAS9C,EACT1C,UACEwB,GAAmBA,EAAgBoB,KAAOA,EAAKuB,IAAOkB,UAAYlB,IAAOsB,eAK/E,wBACEnB,KAAK,SACLiB,UAAS3C,EACT8C,QAASV,EACThF,UAAWmE,IAAOwB,OAClBlB,YAAUjD,GAAmBA,EAAgBoB,KAAOA,GALtD,2BCmCOP,eAxBS,SAAClB,GACvB,MAAO,CACLG,SAAUG,EAAmBN,GAC7BK,gBAAiBD,EAAmBJ,OAIb,SAACmB,GAC1B,MAAO,CACL3B,cAAe,SAACiC,GACdN,EHvBiC,SAACM,EAAIhB,GAAL,OAAiB,SAACU,GACvDA,EAAS9B,KAETgC,IACGoD,OADH,uEAC0EhD,EAD1E,SACqFhB,GAClFqB,MAAK,kBAAMX,EAAS3B,EAAciC,OAClCM,OAAM,SAAClB,GAAD,OAAWM,EAAS7B,EAASuB,OACnCmB,SAAQ,kBAAMb,EAAS9B,SGgBbqF,CAAwBjD,KAEnChC,cAAe,SAACgC,GACdN,EAAS1B,EAAcgC,KAEzB7B,cAAe,SAAC6B,GACdN,EAASvB,EAAc6B,KAEzB9B,cAAe,WACbwB,EAASxB,SAKAuB,EAzDF,SAAC,GAOP,IANLf,EAMI,EANJA,SACAX,EAKI,EALJA,cACAC,EAII,EAJJA,cACAG,EAGI,EAHJA,cACAD,EAEI,EAFJA,cACAU,EACI,EADJA,gBAEMsE,EAAe,SAAClC,GACpBjD,EAAciD,EAAEC,OAAOkC,QAAQnD,KAG3Be,EAAe,SAACC,GACpBhD,EAAcgD,EAAEC,OAAOkC,QAAQnD,IAE/BgB,EAAEC,OAAO2B,QAAUzE,EAAc6C,EAAEC,OAAOkC,QAAQnD,IAAM9B,KAG1D,OACE,oBAAId,UAAWgG,OAAf,SACG1E,EAAS2E,KAAI,SAACrE,GAAD,OACZ,cAAC,EAAD,2BAEMA,GAFN,IAGEJ,gBAAiBA,EACjBuD,SAAUpB,EACVqB,SAAUc,IAJLlE,EAAQgB,Y,iBCMRP,eAdS,SAAClB,GACvB,MAAO,CACLQ,OAAQT,EAAUC,OAIK,SAACmB,GAC1B,MAAO,CACLzB,eAAgB,SAACiD,GACfxB,EAASzB,EAAeiD,QAKfzB,EA9BA,SAAC,GAAgC,IAA9BV,EAA6B,EAA7BA,OAAQd,EAAqB,EAArBA,eAKxB,OACE,sBAAKb,UAAWmE,IAAOxC,OAAvB,UACE,0DAEE,uBAAO2C,KAAK,OAAOR,MAAOnC,EAAQ4C,SARnB,SAACX,GACpB/C,EAAe+C,EAAEC,OAAOC,QAOsC9D,UAAWmE,IAAO+B,iBAE9E,6BCnBS,MAA0B,kC,QCiB1BC,GAbM,SAAC,GAAwB,IAAtBnE,EAAqB,EAArBA,MAAOoE,EAAc,EAAdA,QAC7B,OACE,sBAAKpG,UAAWoF,UAAhB,UACE,mBAAGpF,UAAWqG,OAAd,kCACA,mBAAGrG,UAAWqG,OAAd,SAAqBrE,EAAMsE,UAC3B,qBAAKC,IAAKC,EAAOC,IAAI,gBAAgBC,MAAM,MAAMC,OAAO,QACxD,wBAAQrC,KAAK,SAASoB,QAASU,EAASpG,UAAW0E,aAAnD,2B,oBCCSkC,GARC,WACd,OACE,qBAAKC,MAAO,CAAEH,MAAO,QAASI,UAAW,UAAzC,SACE,cAAC,KAAD,CAAQxC,KAAK,YAAYyC,MAAM,UAAUJ,OAAQ,GAAID,MAAO,QCyCnDM,GAjCS,WACtB,IAAMhF,EAAQiF,YAAYlF,GACpBmF,EAAUD,YAAYhF,GACtBK,EAAW6E,cAUjB,OAJAvH,qBAAU,WACR0C,GRgBuC,SAACA,GAC1CA,EAAS9B,KAETgC,IACG4E,IADH,qEAEGnE,MAAK,SAACN,GACL,IAAMrB,EAAW+F,OAAOC,KAAK3E,EAASE,MAAMoD,KAAI,SAACsB,GAAD,mBAAC,eAC5C5E,EAASE,KAAK0E,IAD6B,IAE9C3E,GAAI2E,OAENjF,EAASrB,EAAYK,OAEtB4B,OAAM,SAAClB,GAAD,OAAWM,EAAS7B,EAASuB,OACnCmB,SAAQ,kBAAMb,EAAS9B,aQ5BvB,IAGD,qCACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,IAECwB,EACC,cAAC,GAAD,CAAcA,MAAOA,EAAOoE,QAfhB,SAACxC,GACnBtB,EAAS5B,QAgBH,qCACE,cAAC,EAAD,IACCwG,EAAU,cAAC,GAAD,IAAc,cAAC,EAAD,UAVjC,SClBWM,I,GAAAA,GARf,WACE,OACE,qBAAKxH,UAAU,MAAf,SACE,cAAC,GAAD,O,yBCaAmC,GAAe,CACnBb,SAHmB,GAInBY,WAAW,EACXF,MAAO,GACPR,gBAAiB,MAKbiG,GAAkBC,YAAc,eAC/BvF,KAD8B,qBAGhC7B,GAAa,SAACa,EAAOwG,GACpB,OAAO,2BAAKxG,GAAZ,IAAmBG,SAAS,GAAD,oBAAMH,EAAMG,UAAZ,CAAsBqG,EAAOC,eAJzB,eAOhCpH,GAAa,SAACW,GACb,OAAO,2BAAKA,GAAZ,IAAmBe,WAAYf,EAAMe,eARN,eAWhCzB,GAAW,SAACU,EAAOwG,GAClB,OAAO,2BAAKxG,GAAZ,IAAmBa,MAAO2F,EAAOC,aAZF,eAehClH,GAAa,SAACS,EAAOwG,GACpB,OAAO,2BAAKxG,GAAZ,IAAmBa,MAAO,QAhBK,eAmBhCrB,GAAgB,SAACQ,EAAOwG,GACvB,OAAO,2BACFxG,GADL,IAEEG,SAAS,aAAKH,EAAMG,SAASK,QAAO,SAACC,GAAD,OAAaA,EAAQgB,KAAO+E,EAAOC,iBAtB1C,eA0BhChH,GAAgB,SAACO,EAAOwG,GACvB,OAAO,2BACFxG,GADL,IAEEG,SAAS,aACJH,EAAMG,SAAS2E,KAAI,SAACrE,GAAD,OACpBA,EAAQgB,KAAO+E,EAAOC,QAAtB,2BAAqChG,GAArC,IAA8Cc,QAASd,EAAQc,SAAWd,WA/BjD,eAqChCd,GAAgB,SAACK,EAAOwG,GACvB,OAAO,2BAAKxG,GAAZ,IAAmBK,gBAAiB,UAtCL,eAyChCT,GAAgB,SAACI,EAAOwG,GACvB,OAAIxG,EAAMG,SAASuG,MAAK,SAACjG,GAAD,OAAaA,EAAQgB,KAAO+E,EAAOC,WAClD,2BACFzG,GADL,IAEEK,gBAAgB,eAAML,EAAMG,SAASuG,MAAK,SAACjG,GAAD,OAAaA,EAAQgB,KAAO+E,EAAOC,cAGxEzG,KAhDsB,eAoDhCH,GAAgB,SAACG,EAAOwG,GACvB,OAAO,2BACFxG,GADL,IAEEG,SAAS,aACJH,EAAMG,SAAS2E,KAAI,SAAC6B,GAAD,OACpBA,EAAKlF,KAAO+E,EAAOC,QAAQhF,GAA3B,2BACSkF,GADT,IACerI,KAAMkI,EAAOC,QAAQnI,KAAM2C,OAAQuF,EAAOC,QAAQxF,OAAQM,QAAQ,IADjF,eAESoF,YA3DgB,eAiEhC7G,GAAc,SAACE,EAAOwG,GACrB,OAAO,2BAAKxG,GAAZ,IAAmBG,SAAS,aAAKqG,EAAOC,cAlET,KAuE/BG,GAAgBL,YAAc,GAAD,eAChC7G,GAAiB,SAACM,EAAOwG,GACxB,OAAgBA,EAAOC,YAIdI,GAAcC,2BAAgB,CACzC5G,YAAaoG,GACbrG,YAAa2G,KClGTG,GAAoBC,cAOXC,GALDC,YAAe,CAC3BC,QAASN,GACTO,WAAW,aAAKL,MCJlBM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,U,kBCX1BrJ,EAAOC,QAAU,CAAC,mBAAmB,mCAAmC,eAAe,+BAA+B,QAAU,0BAA0B,QAAU,0BAA0B,cAAc,8BAA8B,UAAY,4BAA4B,OAAS,yBAAyB,qBAAqB,qCAAqC,iBAAiB,oC","file":"static/js/main.e6af7db7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1a9c9\",\"label\":\"Form_label__1zVtl\",\"input\":\"Form_input__1jByK\",\"formButton\":\"Form_formButton__28yf2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ErrorMessage_text__1gzzn\",\"wrapper\":\"ErrorMessage_wrapper__3PSMA\",\"formButton\":\"ErrorMessage_formButton__3cI4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"Notification_alertWrapper__249cw\",\"alertText\":\"Notification_alertText__1isZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1BKKH\",\"filter\":\"Filter_filter__1P7Q4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__p6yfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__1YECW\"};","import React,{useEffect} from 'react';\r\nimport notStyles from './Notification.module.css';\r\n\r\nconst Notification = ({name,changeAlert,changeName}) => {\r\n\r\n  useEffect(()=>{\r\n    const timer = setTimeout(()=>{changeAlert(false); changeName(\"\")},2000);\r\n    return ()=>{\r\n      clearTimeout(timer);\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n    <div className={notStyles.alertWrapper}>\r\n      <p className={notStyles.alertText}>{name && name[0].toUpperCase()+name.slice(1)} is already in the list!!!</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Notification;\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ==========================Redux Toolkit===========================================\r\n\r\nexport const addContact = createAction(\"ADD_CONTACT\");\r\n\r\nexport const setLoading = createAction(\"SET_LOADING\");\r\n\r\nexport const setError = createAction(\"SET_ERROR\");\r\n\r\nexport const resetError = createAction(\"RESET_ERROR\");\r\n\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const updateContact = createAction(\"UPDATE_CONTACT\");\r\n\r\nexport const filterContacts = createAction(\"FILER_CONTACT\");\r\n\r\nexport const changeAlert = createAction(\"CHANGE_ALERT\");\r\n\r\nexport const resetSelected = createAction(\"RESET_SELECTED\");\r\n\r\nexport const addToSelected = createAction(\"ADD_TO_SELECTED\");\r\n\r\nexport const changeContact = createAction(\"CHANGE_CONTACT\");\r\n\r\nexport const getContacts = createAction(\"GET_CONTACTS\");\r\n\r\n// ====================================Redux===========================================\r\n\r\n// export const deleteCamp = createAction(\"@bootCamps/deleteCamp\");\r\n// export const setFilter = createAction(\"@bootCamps/setFilter\");\r\n// export const setAlert = createAction(\"@bootCamps/setALERT\");\r\n// export const addNewCamp = createAction(\"@bootCamps/adNewCamp\",(data)=>({\r\n//     payload:{...data, id: uuidv4()\r\n// },\r\n// }));\r\n\r\n// const ADDCONTACT = \"ADD_CONTACT\";\r\n// const DELETECONTACT = \"DELETE_CONTACT\";\r\n// const FILTERCONTACT = \"FILER_CONTACT\";\r\n// const UPDATECONTACT = \"UPDATE_CONTACT\";\r\n// const CHANGEALERT = \"CHANGE_ALERT\";\r\n// const RESETSELECTED = \"RESET_SELECTED\";\r\n// const ADDTOSELECTED = \"ADD_TO_SELECTED\";\r\n// const CHANGECONTACT = \"CHANGE_CONTACT\";\r\n// const CHEKUPDATEDITEMS=\"CHECK_UPDATED_ITEMS\";\r\n// const GETCONTACTS = \"GET_CONTACTS\";\r\n\r\n// export const addContact=(contact)=>{\r\n//   return{\r\n//     type: ADDCONTACT,\r\n//     payload: {...contact, id:uuidv4(),update:false}\r\n//   }\r\n// };\r\n\r\n// export const updateContact=(id)=>{\r\n//   return{\r\n//     type:UPDATECONTACT,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const deleteContact=(id)=>{\r\n//   return{\r\n//     type:DELETECONTACT,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const filterContacts=(value)=>{\r\n//   return{\r\n//     type:FILTERCONTACT,\r\n//     payload:value\r\n//   }\r\n// }\r\n\r\n// export const changeAlert=()=>{\r\n//   return{\r\n//     type:CHANGEALERT\r\n//   }\r\n// }\r\n\r\n// export const resetSelected=()=>{\r\n//   return{\r\n//     type:RESETSELECTED\r\n//   }\r\n// }\r\n\r\n// export const addToSelected=(id)=>{\r\n//   return{\r\n//     type:ADDTOSELECTED,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const changeContact=(contact)=>{\r\n//   return{\r\n//     type:CHANGECONTACT,\r\n//     payload:contact\r\n//   }\r\n// }\r\n\r\n// export const getContacts=()=>{\r\n//   return{\r\n//     type:GETCONTACTS\r\n//   }\r\n// }\r\n\r\n// ============================================================================\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.filterValue;\r\n\r\nconst getContacts = (state) => state.contactsArr.contacts;\r\nconst getSelectedContact = (state) => state.contactsArr.selectedContact;\r\nconst getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n\r\nconst getError = (state) => state.contactsArr.error;\r\nconst getContactsLoading = (state) => state.contactsArr.isLoading;\r\n\r\nexport {\r\n  getContacts,\r\n  getSelectedContact,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getError,\r\n  getContactsLoading,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Notification from \"../notification/Notification\";\r\n\r\nimport { resetSelected } from \"../../redux/actions/contactsActions\";\r\nimport {\r\n  addContactOperations,\r\n  changeContactsOperations,\r\n} from \"../../redux/operations/contactsOperations\";\r\nimport { getContacts, getSelectedContact } from \"../../redux/selectors/contactsSelectors\";\r\n\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Form = ({ addContact, selectedContact, changeContact, contacts }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n  const [alert, setAlert] = useState(false);\r\n  const [doubledName, setDoubledName] = useState(\"\");\r\n  const buttonActive = state.name && state.number ? false : true;\r\n\r\n  useEffect(() => {\r\n    selectedContact ? setState({ ...selectedContact }) : setState({ ...initialState });\r\n  }, [selectedContact]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (selectedContact) {\r\n      changeContact(state);\r\n    } else {\r\n      if (contacts.some((contact) => contact.name.toLowerCase() === state.name.toLowerCase())) {\r\n        setAlert(true);\r\n        setDoubledName(state.name);\r\n      } else {\r\n        addContact(state);\r\n      }\r\n    }\r\n\r\n    setState({ ...initialState });\r\n    // resetSelected();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert && (\r\n        <Notification name={doubledName} changeAlert={setAlert} changeName={setDoubledName} />\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          {\" \"}\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={state.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          {\" \"}\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={state.number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" disabled={buttonActive} className={styles.formButton}>\r\n          {selectedContact ? \"Save contact\" : \"Add contact\"}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n    selectedContact: getSelectedContact(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (contact) => {\r\n      dispatch(addContactOperations(contact));\r\n    },\r\n\r\n    changeContact: (contact) => {\r\n      dispatch(changeContactsOperations(contact));\r\n    },\r\n\r\n    resetSelected: () => {\r\n      dispatch(resetSelected());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import axios from \"axios\";\r\nimport {\r\n  addContact,\r\n  setError,\r\n  setLoading,\r\n  deleteContact,\r\n  getContacts,\r\n  changeContact,\r\n  resetSelected,\r\n} from \"../actions/contactsActions\";\r\n\r\nexport const addContactOperations = (contact) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `https://phonebook-83997-default-rtdb.firebaseio.com/contacts.json`,\r\n      {\r\n        ...contact,\r\n        update: false,\r\n      }\r\n    );\r\n    dispatch(addContact({ ...contact, id: response.data.name }));\r\n  } catch (error) {\r\n    dispatch(dispatch(setError(error)));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nexport const deleteContactOperations = (id, contact) => (dispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  axios\r\n    .delete(`https://phonebook-83997-default-rtdb.firebaseio.com/contacts/${id}.json`, contact)\r\n    .then(() => dispatch(deleteContact(id)))\r\n    .catch((error) => dispatch(setError(error)))\r\n    .finally(() => dispatch(setLoading()));\r\n};\r\n\r\nexport const getContactsOperations = () => (dispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  axios\r\n    .get(`https://phonebook-83997-default-rtdb.firebaseio.com/contacts.json`)\r\n    .then((response) => {\r\n      const contacts = Object.keys(response.data).map((key) => ({\r\n        ...response.data[key],\r\n        id: key,\r\n      }));\r\n      dispatch(getContacts(contacts));\r\n    })\r\n    .catch((error) => dispatch(setError(error)))\r\n    .finally(() => dispatch(setLoading()));\r\n};\r\n\r\nexport const changeContactsOperations = (newContact) => (dispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  axios\r\n    .put(`https://phonebook-83997-default-rtdb.firebaseio.com/contacts/${newContact.id}.json`, {\r\n      ...newContact,\r\n      update: false,\r\n    })\r\n    .then(() => {\r\n      dispatch(changeContact(newContact));\r\n      dispatch(resetSelected());\r\n    })\r\n    .catch((error) => setError(error))\r\n    .finally(() => dispatch(setLoading()));\r\n};\r\n","import React from 'react';\r\nimport {section} from './Section.module.css';\r\n\r\nconst Section = ({children}) => {\r\n  return(\r\n  <section className={section}>{children}</section>\r\n  )\r\n};\r\n\r\nexport default Section;\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from \"./ListItem.module.css\";\r\n\r\nconst ListItem = ({ id, name, number, update, onUpdate, onDelete, selectedContact }) => {\r\n  const updatedClass = update ? styles.updated : styles[\"not-updated\"];\r\n  const textUpdatedClass = update ? styles[\"text-updated\"] : styles[\"text-not-updated\"];\r\n\r\n  return (\r\n    <li className={updatedClass}>\r\n      <span className={textUpdatedClass}>\r\n        {name}:{number}\r\n      </span>\r\n\r\n      <div className={styles.wrapper}>\r\n        <label\r\n          className={\r\n            selectedContact && selectedContact.id !== id ? styles.inputHide : styles.itemLabel\r\n          }\r\n        >\r\n          {\" \"}\r\n          Update\r\n          <input\r\n            type=\"checkbox\"\r\n            data-id={id}\r\n            onChange={onUpdate}\r\n            checked={update}\r\n            className={\r\n              selectedContact && selectedContact.id !== id ? styles.inputHide : styles.inputItem\r\n            }\r\n          />\r\n        </label>\r\n\r\n        <button\r\n          type=\"button\"\r\n          data-id={id}\r\n          onClick={onDelete}\r\n          className={styles.button}\r\n          disabled={selectedContact && selectedContact.id === id ? true : false}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport { resetSelected, updateContact, addToSelected } from \"../../redux/actions/contactsActions\";\r\nimport { deleteContactOperations } from \"../../redux/operations/contactsOperations\";\r\nimport { list } from \"./List.module.css\";\r\n\r\nimport { getSelectedContact, getVisibleContacts } from \"../../redux/selectors/contactsSelectors\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport ListItem from \"../listItem/ListItem\";\r\n\r\nconst List = ({\r\n  contacts,\r\n  deleteContact,\r\n  updateContact,\r\n  addToSelected,\r\n  resetSelected,\r\n  selectedContact,\r\n}) => {\r\n  const handleDelete = (e) => {\r\n    deleteContact(e.target.dataset.id);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    updateContact(e.target.dataset.id);\r\n\r\n    e.target.checked ? addToSelected(e.target.dataset.id) : resetSelected();\r\n  };\r\n\r\n  return (\r\n    <ul className={list}>\r\n      {contacts.map((contact) => (\r\n        <ListItem\r\n          key={contact.id}\r\n          {...contact}\r\n          selectedContact={selectedContact}\r\n          onUpdate={handleChange}\r\n          onDelete={handleDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n    selectedContact: getSelectedContact(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => {\r\n      dispatch(deleteContactOperations(id));\r\n    },\r\n    updateContact: (id) => {\r\n      dispatch(updateContact(id));\r\n    },\r\n    addToSelected: (id) => {\r\n      dispatch(addToSelected(id));\r\n    },\r\n    resetSelected: () => {\r\n      dispatch(resetSelected());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { filterContacts } from \"../../redux/actions/contactsActions\";\r\nimport { getFilter } from \"../../redux/selectors/contactsSelectors\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, filterContacts }) => {\r\n  const handleChange = (e) => {\r\n    filterContacts(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" value={filter} onChange={handleChange} className={styles.filterInput} />\r\n      </label>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    filterContacts: (value) => {\r\n      dispatch(filterContacts(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","export default __webpack_public_path__ + \"static/media/error.44f968b5.jpg\";","import React from \"react\";\r\nimport Error from \"../../pic/error.jpg\";\r\nimport { text, wrapper, formButton } from \"./ErrorMessage.module.css\";\r\n\r\nconst ErrorMessage = ({ error, onclick }) => {\r\n  return (\r\n    <div className={wrapper}>\r\n      <p className={text}>Something went wrong</p>\r\n      <p className={text}>{error.message}</p>\r\n      <img src={Error} alt=\"error picture\" width=\"500\" height=\"300\" />\r\n      <button type=\"button\" onClick={onclick} className={formButton}>\r\n        Try again\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div style={{ width: \"500px\", textAlign: \"center\" }}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Form from \"../form/Form\";\r\nimport Section from \"../section/Section\";\r\nimport List from \"../list/List\";\r\nimport Filter from \"../filter/Filter\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport { getContactsOperations } from \"../../redux/operations/contactsOperations\";\r\nimport { resetError } from \"../../redux/actions/contactsActions\";\r\nimport { getError, getContactsLoading } from \"../../redux/selectors/contactsSelectors\";\r\n\r\nconst ContactsTracker = () => {\r\n  const error = useSelector(getError);\r\n  const loading = useSelector(getContactsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (e) => {\r\n    dispatch(resetError());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsOperations());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n\r\n        {error ? (\r\n          <ErrorMessage error={error} onclick={handleClick} />\r\n        ) : (\r\n          <>\r\n            <Filter />\r\n            {loading ? <Spinner /> : <List />}\r\n          </>\r\n        )}\r\n      </Section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsTracker;\r\n","import ContactsTracker from './components/tracker/ContactsTracker';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactsTracker/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  setError,\r\n  resetError,\r\n  setLoading,\r\n  updateContact,\r\n  filterContacts,\r\n  resetSelected,\r\n  addToSelected,\r\n  changeContact,\r\n  getContacts,\r\n} from \"../actions/contactsActions\";\r\n\r\nconst initialArray = [];\r\n\r\nconst initialState = {\r\n  contacts: initialArray,\r\n  isLoading: false,\r\n  error: \"\",\r\n  selectedContact: null,\r\n};\r\n\r\n// ==============================================Redux Toolkit==============================================\r\n\r\nconst contactsReducer = createReducer(\r\n  { ...initialState },\r\n  {\r\n    [addContact]: (state, action) => {\r\n      return { ...state, contacts: [...state.contacts, action.payload] };\r\n    },\r\n\r\n    [setLoading]: (state) => {\r\n      return { ...state, isLoading: !state.isLoading };\r\n    },\r\n\r\n    [setError]: (state, action) => {\r\n      return { ...state, error: action.payload };\r\n    },\r\n\r\n    [resetError]: (state, action) => {\r\n      return { ...state, error: \"\" };\r\n    },\r\n\r\n    [deleteContact]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts.filter((contact) => contact.id !== action.payload)],\r\n      };\r\n    },\r\n\r\n    [updateContact]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.map((contact) =>\r\n            contact.id === action.payload ? { ...contact, update: !contact.update } : contact\r\n          ),\r\n        ],\r\n      };\r\n    },\r\n\r\n    [resetSelected]: (state, action) => {\r\n      return { ...state, selectedContact: null };\r\n    },\r\n\r\n    [addToSelected]: (state, action) => {\r\n      if (state.contacts.find((contact) => contact.id === action.payload)) {\r\n        return {\r\n          ...state,\r\n          selectedContact: { ...state.contacts.find((contact) => contact.id === action.payload) },\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    },\r\n\r\n    [changeContact]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.map((item) =>\r\n            item.id === action.payload.id\r\n              ? { ...item, name: action.payload.name, number: action.payload.number, update: false }\r\n              : { ...item }\r\n          ),\r\n        ],\r\n      };\r\n    },\r\n\r\n    [getContacts]: (state, action) => {\r\n      return { ...state, contacts: [...action.payload] };\r\n    },\r\n  }\r\n);\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContacts]: (state, action) => {\r\n    return (state = action.payload);\r\n  },\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  contactsArr: contactsReducer,\r\n  filterValue: filterReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./reducer/contactsReducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import logger from 'redux-logger';\r\n\r\n// const store = createStore(phoneBookReducer, composeWithDevTools());\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-not-updated\":\"ListItem_text-not-updated__2IHZi\",\"text-updated\":\"ListItem_text-updated__2ZtsJ\",\"wrapper\":\"ListItem_wrapper__1fp0r\",\"updated\":\"ListItem_updated__aW2Jt\",\"not-updated\":\"ListItem_not-updated__-d2fC\",\"inputHide\":\"ListItem_inputHide__2ZxkL\",\"button\":\"ListItem_button__dNwaP\",\"button-not-updated\":\"ListItem_button-not-updated__29-3t\",\"button-updated\":\"ListItem_button-updated__NvP6L\"};"],"sourceRoot":""}